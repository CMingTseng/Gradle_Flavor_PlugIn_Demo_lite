apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.ximik3.drive'
// https://developer.android.com/studio/publish/app-signing
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.zinc.com.zinc.flavordemo"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        gradleStudy {
            keyAlias keystoreProperties['keyAlias1']
            keyPassword keystoreProperties['keyPassword1']
            storeFile file(keystoreProperties['storeFile1'])
            storePassword keystoreProperties['storePassword1']
        }

        xiaopenyou {
            keyAlias keystoreProperties['keyAlias2']
            keyPassword keystoreProperties['keyPassword2']
            storeFile file(keystoreProperties['storeFile2'])
            storePassword keystoreProperties['storePassword2']
        }

        jiangpengyong {
            keyAlias keystoreProperties['keyAlias3']
            keyPassword keystoreProperties['keyPassword3']
            storeFile file(keystoreProperties['storeFile3'])
            storePassword keystoreProperties['storePassword3']
        }
    }

    buildTypes {
        release {
//            signingConfig signingConfigs.gradleStudy
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions('abi', 'version')
    productFlavors {
        arm64 {
            dimension 'version'
            applicationIdSuffix '.v1'
//            externalNativeBuild {
//                ndkBuild {
//                    // Passes an optional argument to ndk-build.
//                    arguments "NDK_MODULE_PATH+=../../third_party/modules"
//                }
//                // For ndk-build, instead use the ndkBuild block.
//                cmake {
//                    // Passes optional arguments to CMake.
//                    arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"
//
//                    // Sets a flag to enable format macro constants for the C compiler.
//                    cFlags "-D__STDC_FORMAT_MACROS"
//
//                    // Sets optional flags for the C++ compiler.
//                    cppFlags "-fexceptions", "-frtti"
//
//                    // Specifies the library and executable targets from your CMake project
//                    // that Gradle should build.
//                    targets "libexample-one", "my-executible-demo"
//                }
//            }
        }

        armV7 {
            dimension 'abi'
            applicationId 'com.zinc.shark'
            manifestPlaceholders = [
                    hostName: "www.armv7.com",
                    logo    : "@drawable/logo",
                    appName : "shark",
            ]
            signingConfig signingConfigs.xiaopenyou
            versionCode 1666
            versionName '1.6.66'
            buildConfigField('String', 'name', '"JiangPengYong"')
            buildConfigField('int', 'age', '26')
        }

        x86 {
            dimension 'abi'
            applicationId 'com.zinc.bear'
            manifestPlaceholders = [
                    hostName: "www.x86.com",
                    logo    : "@drawable/logo",
                    appName : "bear",
            ]
            signingConfig signingConfigs.jiangpengyong
            versionCode 1898
            versionName '1.8.98'
            buildConfigField('String', 'name', '"XiaoPenYou"')
            buildConfigField('int', 'age', '26')
            matchingFallbacks = ['pro']
            missingDimensionStrategy 'version','v1'
        }

        x64 {
            dimension 'abi'
            applicationId 'com.zinc.bear'
            manifestPlaceholders = [
                    hostName: "www.x64.com",
                    logo    : "@drawable/logo",
                    appName : "bear64",
            ]
            signingConfig signingConfigs.jiangpengyong
            versionCode 1864
            versionName '1.8.64'
            buildConfigField('String', 'name', '"XiaoPenYou64"')
            buildConfigField('int', 'age', '64')
            matchingFallbacks = ['pro']
            missingDimensionStrategy 'version','v1'
        }
    }

    deploy {
        serviceAccountEmail = 'your-service-account-email'
        pk12File = file('key.p12')
        folderId = 'your-shared-folder-id'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation 'com.auth0:java-jwt:+'
    testImplementation 'com.google.api-client:google-api-client:+'
//    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
    testImplementation 'com.squareup.retrofit2:retrofit:2.9.0'
    testImplementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    testImplementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    testImplementation "com.squareup.okhttp3:okhttp:3.14.0"
    testImplementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.14.0'
    testImplementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'commons-codec:commons-codec:1.15'
    testImplementation 'com.clouway.security:jwt-java-client-okhttp:0.0.2'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    x86Implementation project(':flavor_x86')
}